#!/usr/bin/env bash
#
# Summary: Run an executable with the selected Terraform version
#
# Usage: tfenv exec <command> [arg1 arg2...]
#
# Runs an executable by first preparing PATH so that the selected Terraform
# version's `bin' directory is at the front.
#
# For example, if the currently selected Terraform version is 0.7.0:
#   tfenv exec plan
#
# is equivalent to:
#   PATH="$TFENV_ROOT/versions/0.7.0/bin:$PATH" terraform plan

set -uo pipefail;

# Ensure we can execute standalone
if [ -n "${TFENV_ROOT:-""}" ]; then
  if [ "${TFENV_DEBUG:-0}" -gt 1 ]; then
    [ -n "${TFENV_HELPERS:-""}" ] \
      && log 'debug' "TFENV_ROOT already defined as ${TFENV_ROOT}" \
      || echo "[DEBUG] TFENV_ROOT already defined as ${TFENV_ROOT}";
  fi;
else
  export TFENV_ROOT="$(cd "$(dirname "${0}")/.." && pwd)";
  if [ "${TFENV_DEBUG:-0}" -gt 1 ]; then
    [ -n "${TFENV_HELPERS:-""}" ] \
      && log 'debug' "TFENV_ROOT declared as ${TFENV_ROOT}" \
      || echo "[DEBUG] TFENV_ROOT declared as ${TFENV_ROOT}";
  fi;
fi;

if [ -n "${TFENV_HELPERS:-""}" ]; then
  log 'debug' 'TFENV_HELPERS is set, not sourcing helpers again';
else
  [ "${TFENV_DEBUG:-0}" -gt 1 ] && echo "[DEBUG] Sourcing helpers from ${TFENV_ROOT}/lib/helpers.sh";
  if source "${TFENV_ROOT}/lib/helpers.sh"; then
    log 'debug' 'Helpers sourced successfully';
  else
    echo "[ERROR] Failed to source helpers from ${TFENV_ROOT}/lib/helpers.sh" >&2;
    exit 1;
  fi;
fi;

log 'debug' 'Getting version from tfenv-version-name';
TFENV_VERSION="$(tfenv-version-name | tail -n1)" \
  && log 'debug' "TFENV_VERSION is ${TFENV_VERSION}" \
  || log 'error' 'Failed to get version from tfenv-version-name';
export TFENV_VERSION;

TF_BIN_PATH="${TFENV_ROOT}/versions/${TFENV_VERSION}/terraform";
export PATH="${TF_BIN_PATH}:${PATH}";
log 'debug' "TF_BIN_PATH added to PATH: ${TF_BIN_PATH}";
log 'debug' "Executing: ${TF_BIN_PATH} ${@}";

exec "${TF_BIN_PATH}" "${@}" \
  || log 'error' "Failed to execute: ${TF_BIN_PATH} ${@}";

exit 0;
